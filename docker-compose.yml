version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - mongodb
      - kafka
      - zookeeper
    environment:
      - POSTGRES_URL=postgresql://banking:banking@postgres:5432/banking?sslmode=disable
      - MONGO_URL=mongodb://mongodb:27017
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=transactions
      - KAFKA_GROUP_ID=banking-group
      - SERVER_PORT=8080
    networks:
      - banking-network

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=banking
      - POSTGRES_PASSWORD=banking
      - POSTGRES_DB=banking
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - banking-network

  mongodb:
    image: mongo:5
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - banking-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - banking-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - banking-network

volumes:
  postgres_data:
  mongodb_data:

networks:
  banking-network:
    driver: bridge